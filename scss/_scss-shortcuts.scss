/*////////////////////////////   Includes for extended CSS ///////////////////////// */
/*
BoxShadow                           @include box-shadow(0, 2px, 5px, 0, #000000, inset);
                                       -min- @include box-shadow(0, 2px, 5px);
                                       -more shadows- @include box-shadow(0, 2px, 5px, 0, #000000, false,(-15px 2px 5px 0 #000000));
                                                      @include box-shadow(0, 2px, 5px, 0, #000000, false,(-15px 2px 5px 0 #000000, -15px 20px 5px 0 #000000));

Opacity                             @include Opacity(0.5);

Linear Gradients                    @include gradient-vertical(#cccccc, #666666, 0%, 100%)
                                    @include gradient-horizontal(#cccccc, #666666, 0%, 100%)

Rotate                              @include rotate(45deg);

Retina background                   @include background-retina(logo-@2.png", 120, 30);

Border Radius                       @include border-radius(6);

Transition                          @include transition(box-shadow ease-in 1s);
                                    @include transition-property(width);
                                    @include transition-timing-function(ease-in);
                                    @include transition-delay(2s);

Input placeholder                   @input-placeholder(Your name);
*/
/*////////////////////////////   Mixins  ///////////////////////// */

@mixin box-shadow($top, $left, $blur, $size: 0, $shadow-color: #000000, $inset: false, $another-shadows: false) {
    @function _anothershadow($data) {
        @if $data == false{
            @return ()
        } @else {
            @return #{", " + $data}
        }
    }
    @if $inset == 'inset' {
        -webkit-box-shadow:inset $top $left $blur $size $shadow-color;
           -moz-box-shadow:inset $top $left $blur $size $shadow-color;
                box-shadow:inset $top $left $blur $size $shadow-color;
    } @else {
        -webkit-box-shadow: $top $left $blur $size $shadow-color _anothershadow($another-shadows);
           -moz-box-shadow: $top $left $blur $size $shadow-color _anothershadow($another-shadows);
                box-shadow: $top $left $blur $size $shadow-color _anothershadow($another-shadows);
    }
}


/* Opacity
   @include Opacity(0.5);
*/
@mixin opacity($opacity) {
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
	filter: alpha(opacity=$opacity-ie); //IE8
}


/* Linear Gradients
   @include gradient-vertical(#cccccc, #666666, 0%, 100%)
   @include gradient-horizontal(#cccccc, #666666, 0%, 100%)
*/
@mixin gradient-vertical($start-color, $end-color, $start-percent: 0%, $end-percent: 100%) {
    background-color: $start-color; /* Old browsers */
    background-image: -moz-linear-gradient(top, $start-color $start-percent, $end-color $end-percent); // FF3.6+
	background-image: -webkit-linear-gradient(top, $start-color $start-percent, $end-color $end-percent);  // Safari 5.1-6, Chrome 10+
	background-image: -o-linear-gradient(top, $start-color $start-percent, $end-color $end-percent);  // Opera 11.10+
	background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
    background: -ms-linear-gradient(top,  $start-color $start-percent,$end-color $end-percent); /* IE10+ */
    background: linear-gradient(to bottom,  $start-color $start-percent,$end-color $end-percent); /* W3C */
	background-repeat: repeat-x;
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=0); // IE9 and down
}

@mixin gradient-horizontal($start-color, $end-color, $start-percent: 0%, $end-percent: 100%) {
  background-color: $start-color; /* Old browsers */
  background-image: -moz-linear-gradient(left, $start-color $start-percent, $end-color $end-percent); // FF3.6+
  background-image: -webkit-gradient(linear, left top, right top, color-stop($start-percent, $start-color), color-stop($end-percent, $end-color));   // Safari 5.1-6, Chrome 10+
  background-image: -webkit-linear-gradient(left, $start-color $start-percent, $end-color $end-percent);
  background-image: -o-linear-gradient(left, $start-color $start-percent, $end-color $end-percent);  // Opera 12
  background: -ms-linear-gradient(left, $start-color $start-percent, $end-color $end-percent);
  background: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$start-color', endColorstr='$end-color',GradientType=1 );
}


/* Rotate
   @include rotate(45deg);
*/
@mixin rotate($deg){
	-webkit-transform: rotate($deg);
       -moz-transform: rotate($deg);
         -o-transform: rotate($deg);
        -ms-transform: rotate($deg);
            transform: rotate($deg);
}

/* Retina background
    background:url(logo.png) no-repeat;
    @include background-retina(logo-@2.png", 120, 30);
*/
@mixin background-retina($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    background-image: url($image);
    background-size: $width + px $height + px;
    background-size: $width / 10 + rem $height / 10 + rem;
  }
}


/* Border Radius
    @include border-radius(6);
*/
@mixin border-radius($size){
    -webkit-border-radius: $size + px;
       -moz-border-radius: $size + px;
            border-radius: $size + px;  
}


/* Transition
    @include transition(box-shadow ease-in 1s);
    @include transition-property(width);
    @include transition-timing-function(ease-in);
    @include transition-delay(2s);
*/
@mixin transition($transition) {
    -webkit-transition: $transition;
       -moz-transition: $transition;
        -ms-transition: $transition;
         -o-transition: $transition;
            transition: $transition;
}
@mixin transition-property($property) {
    -moz-transition-property:    $property;
    -o-transition-property:      $property;
    -webkit-transition-property: $property;
    transition-property:         $property;
}
@mixin transition-duration($duration) {
    -moz-transition-property:    $duration;
    -o-transition-property:      $duration;
    -webkit-transition-property: $duration;
    transition-property:         $duration;
}
@mixin transition-timing-function($timing) {
    -moz-transition-timing-function:    $timing;
    -o-transition-timing-function:      $timing;
    -webkit-transition-timing-function: $timing;
    transition-timing-function:         $timing;
}
@mixin transition-delay($delay) {
    -moz-transition-delay:    $delay;
    -o-transition-delay:      $delay;
    -webkit-transition-delay: $delay;
    transition-delay:         $delay;
}

/* Input placeholder
    @input-placeholder(Your name);
*/
@mixin input-placeholder {
	&::-webkit-input-placeholder {@content}
	&:-moz-placeholder           {@content}
	&::-moz-placeholder          {@content}
	&:-ms-input-placeholder      {@content}
}
